// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: test.proto

#ifndef PROTOBUF_test_2eproto__INCLUDED
#define PROTOBUF_test_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_test_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsExample1_EmbeddedMessageImpl();
void InitDefaultsExample1_EmbeddedMessage();
void InitDefaultsExample1Impl();
void InitDefaultsExample1();
inline void InitDefaults() {
  InitDefaultsExample1_EmbeddedMessage();
  InitDefaultsExample1();
}
}  // namespace protobuf_test_2eproto
namespace test {
class Example1;
class Example1DefaultTypeInternal;
extern Example1DefaultTypeInternal _Example1_default_instance_;
class Example1_EmbeddedMessage;
class Example1_EmbeddedMessageDefaultTypeInternal;
extern Example1_EmbeddedMessageDefaultTypeInternal _Example1_EmbeddedMessage_default_instance_;
}  // namespace test
namespace test {

// ===================================================================

class Example1_EmbeddedMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:test.Example1.EmbeddedMessage) */ {
 public:
  Example1_EmbeddedMessage();
  virtual ~Example1_EmbeddedMessage();

  Example1_EmbeddedMessage(const Example1_EmbeddedMessage& from);

  inline Example1_EmbeddedMessage& operator=(const Example1_EmbeddedMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Example1_EmbeddedMessage(Example1_EmbeddedMessage&& from) noexcept
    : Example1_EmbeddedMessage() {
    *this = ::std::move(from);
  }

  inline Example1_EmbeddedMessage& operator=(Example1_EmbeddedMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Example1_EmbeddedMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Example1_EmbeddedMessage* internal_default_instance() {
    return reinterpret_cast<const Example1_EmbeddedMessage*>(
               &_Example1_EmbeddedMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Example1_EmbeddedMessage* other);
  friend void swap(Example1_EmbeddedMessage& a, Example1_EmbeddedMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Example1_EmbeddedMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  Example1_EmbeddedMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Example1_EmbeddedMessage& from);
  void MergeFrom(const Example1_EmbeddedMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Example1_EmbeddedMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string stringVal = 2;
  bool has_stringval() const;
  void clear_stringval();
  static const int kStringValFieldNumber = 2;
  const ::std::string& stringval() const;
  void set_stringval(const ::std::string& value);
  #if LANG_CXX11
  void set_stringval(::std::string&& value);
  #endif
  void set_stringval(const char* value);
  void set_stringval(const char* value, size_t size);
  ::std::string* mutable_stringval();
  ::std::string* release_stringval();
  void set_allocated_stringval(::std::string* stringval);

  // optional int32 int32Val = 1;
  bool has_int32val() const;
  void clear_int32val();
  static const int kInt32ValFieldNumber = 1;
  ::google::protobuf::int32 int32val() const;
  void set_int32val(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:test.Example1.EmbeddedMessage)
 private:
  void set_has_int32val();
  void clear_has_int32val();
  void set_has_stringval();
  void clear_has_stringval();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr stringval_;
  ::google::protobuf::int32 int32val_;
  friend struct ::protobuf_test_2eproto::TableStruct;
  friend void ::protobuf_test_2eproto::InitDefaultsExample1_EmbeddedMessageImpl();
};
// -------------------------------------------------------------------

class Example1 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:test.Example1) */ {
 public:
  Example1();
  virtual ~Example1();

  Example1(const Example1& from);

  inline Example1& operator=(const Example1& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Example1(Example1&& from) noexcept
    : Example1() {
    *this = ::std::move(from);
  }

  inline Example1& operator=(Example1&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Example1& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Example1* internal_default_instance() {
    return reinterpret_cast<const Example1*>(
               &_Example1_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Example1* other);
  friend void swap(Example1& a, Example1& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Example1* New() const PROTOBUF_FINAL { return New(NULL); }

  Example1* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Example1& from);
  void MergeFrom(const Example1& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Example1* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Example1_EmbeddedMessage EmbeddedMessage;

  // accessors -------------------------------------------------------

  // repeated int32 repeatedInt32Val = 4;
  int repeatedint32val_size() const;
  void clear_repeatedint32val();
  static const int kRepeatedInt32ValFieldNumber = 4;
  ::google::protobuf::int32 repeatedint32val(int index) const;
  void set_repeatedint32val(int index, ::google::protobuf::int32 value);
  void add_repeatedint32val(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      repeatedint32val() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_repeatedint32val();

  // repeated string repeatedStringVal = 5;
  int repeatedstringval_size() const;
  void clear_repeatedstringval();
  static const int kRepeatedStringValFieldNumber = 5;
  const ::std::string& repeatedstringval(int index) const;
  ::std::string* mutable_repeatedstringval(int index);
  void set_repeatedstringval(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_repeatedstringval(int index, ::std::string&& value);
  #endif
  void set_repeatedstringval(int index, const char* value);
  void set_repeatedstringval(int index, const char* value, size_t size);
  ::std::string* add_repeatedstringval();
  void add_repeatedstringval(const ::std::string& value);
  #if LANG_CXX11
  void add_repeatedstringval(::std::string&& value);
  #endif
  void add_repeatedstringval(const char* value);
  void add_repeatedstringval(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& repeatedstringval() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_repeatedstringval();

  // optional string stringVal = 1;
  bool has_stringval() const;
  void clear_stringval();
  static const int kStringValFieldNumber = 1;
  const ::std::string& stringval() const;
  void set_stringval(const ::std::string& value);
  #if LANG_CXX11
  void set_stringval(::std::string&& value);
  #endif
  void set_stringval(const char* value);
  void set_stringval(const char* value, size_t size);
  ::std::string* mutable_stringval();
  ::std::string* release_stringval();
  void set_allocated_stringval(::std::string* stringval);

  // optional bytes bytesVal = 2;
  bool has_bytesval() const;
  void clear_bytesval();
  static const int kBytesValFieldNumber = 2;
  const ::std::string& bytesval() const;
  void set_bytesval(const ::std::string& value);
  #if LANG_CXX11
  void set_bytesval(::std::string&& value);
  #endif
  void set_bytesval(const char* value);
  void set_bytesval(const void* value, size_t size);
  ::std::string* mutable_bytesval();
  ::std::string* release_bytesval();
  void set_allocated_bytesval(::std::string* bytesval);

  // optional .test.Example1.EmbeddedMessage embeddedExample1 = 3;
  bool has_embeddedexample1() const;
  void clear_embeddedexample1();
  static const int kEmbeddedExample1FieldNumber = 3;
  const ::test::Example1_EmbeddedMessage& embeddedexample1() const;
  ::test::Example1_EmbeddedMessage* release_embeddedexample1();
  ::test::Example1_EmbeddedMessage* mutable_embeddedexample1();
  void set_allocated_embeddedexample1(::test::Example1_EmbeddedMessage* embeddedexample1);

  // @@protoc_insertion_point(class_scope:test.Example1)
 private:
  void set_has_stringval();
  void clear_has_stringval();
  void set_has_bytesval();
  void clear_has_bytesval();
  void set_has_embeddedexample1();
  void clear_has_embeddedexample1();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > repeatedint32val_;
  ::google::protobuf::RepeatedPtrField< ::std::string> repeatedstringval_;
  ::google::protobuf::internal::ArenaStringPtr stringval_;
  ::google::protobuf::internal::ArenaStringPtr bytesval_;
  ::test::Example1_EmbeddedMessage* embeddedexample1_;
  friend struct ::protobuf_test_2eproto::TableStruct;
  friend void ::protobuf_test_2eproto::InitDefaultsExample1Impl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Example1_EmbeddedMessage

// optional int32 int32Val = 1;
inline bool Example1_EmbeddedMessage::has_int32val() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Example1_EmbeddedMessage::set_has_int32val() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Example1_EmbeddedMessage::clear_has_int32val() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Example1_EmbeddedMessage::clear_int32val() {
  int32val_ = 0;
  clear_has_int32val();
}
inline ::google::protobuf::int32 Example1_EmbeddedMessage::int32val() const {
  // @@protoc_insertion_point(field_get:test.Example1.EmbeddedMessage.int32Val)
  return int32val_;
}
inline void Example1_EmbeddedMessage::set_int32val(::google::protobuf::int32 value) {
  set_has_int32val();
  int32val_ = value;
  // @@protoc_insertion_point(field_set:test.Example1.EmbeddedMessage.int32Val)
}

// optional string stringVal = 2;
inline bool Example1_EmbeddedMessage::has_stringval() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Example1_EmbeddedMessage::set_has_stringval() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Example1_EmbeddedMessage::clear_has_stringval() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Example1_EmbeddedMessage::clear_stringval() {
  stringval_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_stringval();
}
inline const ::std::string& Example1_EmbeddedMessage::stringval() const {
  // @@protoc_insertion_point(field_get:test.Example1.EmbeddedMessage.stringVal)
  return stringval_.GetNoArena();
}
inline void Example1_EmbeddedMessage::set_stringval(const ::std::string& value) {
  set_has_stringval();
  stringval_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:test.Example1.EmbeddedMessage.stringVal)
}
#if LANG_CXX11
inline void Example1_EmbeddedMessage::set_stringval(::std::string&& value) {
  set_has_stringval();
  stringval_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:test.Example1.EmbeddedMessage.stringVal)
}
#endif
inline void Example1_EmbeddedMessage::set_stringval(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_stringval();
  stringval_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:test.Example1.EmbeddedMessage.stringVal)
}
inline void Example1_EmbeddedMessage::set_stringval(const char* value, size_t size) {
  set_has_stringval();
  stringval_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:test.Example1.EmbeddedMessage.stringVal)
}
inline ::std::string* Example1_EmbeddedMessage::mutable_stringval() {
  set_has_stringval();
  // @@protoc_insertion_point(field_mutable:test.Example1.EmbeddedMessage.stringVal)
  return stringval_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Example1_EmbeddedMessage::release_stringval() {
  // @@protoc_insertion_point(field_release:test.Example1.EmbeddedMessage.stringVal)
  clear_has_stringval();
  return stringval_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Example1_EmbeddedMessage::set_allocated_stringval(::std::string* stringval) {
  if (stringval != NULL) {
    set_has_stringval();
  } else {
    clear_has_stringval();
  }
  stringval_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stringval);
  // @@protoc_insertion_point(field_set_allocated:test.Example1.EmbeddedMessage.stringVal)
}

// -------------------------------------------------------------------

// Example1

// optional string stringVal = 1;
inline bool Example1::has_stringval() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Example1::set_has_stringval() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Example1::clear_has_stringval() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Example1::clear_stringval() {
  stringval_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_stringval();
}
inline const ::std::string& Example1::stringval() const {
  // @@protoc_insertion_point(field_get:test.Example1.stringVal)
  return stringval_.GetNoArena();
}
inline void Example1::set_stringval(const ::std::string& value) {
  set_has_stringval();
  stringval_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:test.Example1.stringVal)
}
#if LANG_CXX11
inline void Example1::set_stringval(::std::string&& value) {
  set_has_stringval();
  stringval_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:test.Example1.stringVal)
}
#endif
inline void Example1::set_stringval(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_stringval();
  stringval_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:test.Example1.stringVal)
}
inline void Example1::set_stringval(const char* value, size_t size) {
  set_has_stringval();
  stringval_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:test.Example1.stringVal)
}
inline ::std::string* Example1::mutable_stringval() {
  set_has_stringval();
  // @@protoc_insertion_point(field_mutable:test.Example1.stringVal)
  return stringval_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Example1::release_stringval() {
  // @@protoc_insertion_point(field_release:test.Example1.stringVal)
  clear_has_stringval();
  return stringval_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Example1::set_allocated_stringval(::std::string* stringval) {
  if (stringval != NULL) {
    set_has_stringval();
  } else {
    clear_has_stringval();
  }
  stringval_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stringval);
  // @@protoc_insertion_point(field_set_allocated:test.Example1.stringVal)
}

// optional bytes bytesVal = 2;
inline bool Example1::has_bytesval() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Example1::set_has_bytesval() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Example1::clear_has_bytesval() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Example1::clear_bytesval() {
  bytesval_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_bytesval();
}
inline const ::std::string& Example1::bytesval() const {
  // @@protoc_insertion_point(field_get:test.Example1.bytesVal)
  return bytesval_.GetNoArena();
}
inline void Example1::set_bytesval(const ::std::string& value) {
  set_has_bytesval();
  bytesval_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:test.Example1.bytesVal)
}
#if LANG_CXX11
inline void Example1::set_bytesval(::std::string&& value) {
  set_has_bytesval();
  bytesval_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:test.Example1.bytesVal)
}
#endif
inline void Example1::set_bytesval(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_bytesval();
  bytesval_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:test.Example1.bytesVal)
}
inline void Example1::set_bytesval(const void* value, size_t size) {
  set_has_bytesval();
  bytesval_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:test.Example1.bytesVal)
}
inline ::std::string* Example1::mutable_bytesval() {
  set_has_bytesval();
  // @@protoc_insertion_point(field_mutable:test.Example1.bytesVal)
  return bytesval_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Example1::release_bytesval() {
  // @@protoc_insertion_point(field_release:test.Example1.bytesVal)
  clear_has_bytesval();
  return bytesval_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Example1::set_allocated_bytesval(::std::string* bytesval) {
  if (bytesval != NULL) {
    set_has_bytesval();
  } else {
    clear_has_bytesval();
  }
  bytesval_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bytesval);
  // @@protoc_insertion_point(field_set_allocated:test.Example1.bytesVal)
}

// optional .test.Example1.EmbeddedMessage embeddedExample1 = 3;
inline bool Example1::has_embeddedexample1() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Example1::set_has_embeddedexample1() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Example1::clear_has_embeddedexample1() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Example1::clear_embeddedexample1() {
  if (embeddedexample1_ != NULL) embeddedexample1_->Clear();
  clear_has_embeddedexample1();
}
inline const ::test::Example1_EmbeddedMessage& Example1::embeddedexample1() const {
  const ::test::Example1_EmbeddedMessage* p = embeddedexample1_;
  // @@protoc_insertion_point(field_get:test.Example1.embeddedExample1)
  return p != NULL ? *p : *reinterpret_cast<const ::test::Example1_EmbeddedMessage*>(
      &::test::_Example1_EmbeddedMessage_default_instance_);
}
inline ::test::Example1_EmbeddedMessage* Example1::release_embeddedexample1() {
  // @@protoc_insertion_point(field_release:test.Example1.embeddedExample1)
  clear_has_embeddedexample1();
  ::test::Example1_EmbeddedMessage* temp = embeddedexample1_;
  embeddedexample1_ = NULL;
  return temp;
}
inline ::test::Example1_EmbeddedMessage* Example1::mutable_embeddedexample1() {
  set_has_embeddedexample1();
  if (embeddedexample1_ == NULL) {
    embeddedexample1_ = new ::test::Example1_EmbeddedMessage;
  }
  // @@protoc_insertion_point(field_mutable:test.Example1.embeddedExample1)
  return embeddedexample1_;
}
inline void Example1::set_allocated_embeddedexample1(::test::Example1_EmbeddedMessage* embeddedexample1) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete embeddedexample1_;
  }
  if (embeddedexample1) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      embeddedexample1 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, embeddedexample1, submessage_arena);
    }
    set_has_embeddedexample1();
  } else {
    clear_has_embeddedexample1();
  }
  embeddedexample1_ = embeddedexample1;
  // @@protoc_insertion_point(field_set_allocated:test.Example1.embeddedExample1)
}

// repeated int32 repeatedInt32Val = 4;
inline int Example1::repeatedint32val_size() const {
  return repeatedint32val_.size();
}
inline void Example1::clear_repeatedint32val() {
  repeatedint32val_.Clear();
}
inline ::google::protobuf::int32 Example1::repeatedint32val(int index) const {
  // @@protoc_insertion_point(field_get:test.Example1.repeatedInt32Val)
  return repeatedint32val_.Get(index);
}
inline void Example1::set_repeatedint32val(int index, ::google::protobuf::int32 value) {
  repeatedint32val_.Set(index, value);
  // @@protoc_insertion_point(field_set:test.Example1.repeatedInt32Val)
}
inline void Example1::add_repeatedint32val(::google::protobuf::int32 value) {
  repeatedint32val_.Add(value);
  // @@protoc_insertion_point(field_add:test.Example1.repeatedInt32Val)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Example1::repeatedint32val() const {
  // @@protoc_insertion_point(field_list:test.Example1.repeatedInt32Val)
  return repeatedint32val_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Example1::mutable_repeatedint32val() {
  // @@protoc_insertion_point(field_mutable_list:test.Example1.repeatedInt32Val)
  return &repeatedint32val_;
}

// repeated string repeatedStringVal = 5;
inline int Example1::repeatedstringval_size() const {
  return repeatedstringval_.size();
}
inline void Example1::clear_repeatedstringval() {
  repeatedstringval_.Clear();
}
inline const ::std::string& Example1::repeatedstringval(int index) const {
  // @@protoc_insertion_point(field_get:test.Example1.repeatedStringVal)
  return repeatedstringval_.Get(index);
}
inline ::std::string* Example1::mutable_repeatedstringval(int index) {
  // @@protoc_insertion_point(field_mutable:test.Example1.repeatedStringVal)
  return repeatedstringval_.Mutable(index);
}
inline void Example1::set_repeatedstringval(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:test.Example1.repeatedStringVal)
  repeatedstringval_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Example1::set_repeatedstringval(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:test.Example1.repeatedStringVal)
  repeatedstringval_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Example1::set_repeatedstringval(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  repeatedstringval_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:test.Example1.repeatedStringVal)
}
inline void Example1::set_repeatedstringval(int index, const char* value, size_t size) {
  repeatedstringval_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:test.Example1.repeatedStringVal)
}
inline ::std::string* Example1::add_repeatedstringval() {
  // @@protoc_insertion_point(field_add_mutable:test.Example1.repeatedStringVal)
  return repeatedstringval_.Add();
}
inline void Example1::add_repeatedstringval(const ::std::string& value) {
  repeatedstringval_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:test.Example1.repeatedStringVal)
}
#if LANG_CXX11
inline void Example1::add_repeatedstringval(::std::string&& value) {
  repeatedstringval_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:test.Example1.repeatedStringVal)
}
#endif
inline void Example1::add_repeatedstringval(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  repeatedstringval_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:test.Example1.repeatedStringVal)
}
inline void Example1::add_repeatedstringval(const char* value, size_t size) {
  repeatedstringval_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:test.Example1.repeatedStringVal)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Example1::repeatedstringval() const {
  // @@protoc_insertion_point(field_list:test.Example1.repeatedStringVal)
  return repeatedstringval_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Example1::mutable_repeatedstringval() {
  // @@protoc_insertion_point(field_mutable_list:test.Example1.repeatedStringVal)
  return &repeatedstringval_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace test

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_test_2eproto__INCLUDED
